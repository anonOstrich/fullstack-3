{"version":3,"sources":["services/PersonService.js","App.js","index.js"],"names":["baseUrl","PersonService","axios","get","then","response","data","newPerson","post","id","delete","concat","person","put","Filter","_ref","changeHandler","react_default","a","createElement","onChange","Persons","_ref2","contactInfo","filter","createDeletorForPerson","p","name","toLowerCase","includes","map","key","number","onClick","PersonForm","_ref3","nameValue","nameChangeFunction","numberValue","numberChangeFunction","submitFunction","value","type","MessageBox","_ref4","notificationInfo","message","isError","Fragment","messageStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","setNotificationInfo","useEffect","_useState5","_useState6","newName","setNewName","_useState7","_useState8","newNumber","setNewNumber","_useState9","_useState10","filterString","setFilterString","App_MessageBox","App_Filter","event","target","App_PersonForm","preventDefault","window","confirm","updatedPerson","objectSpread","find","catch","length","setTimeout","App_Persons","deletablePerson","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3abe5c7c.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getPersons = () => {\n    return axios.get(baseUrl)\n            .then(response => response.data); \n}\n\nconst addPerson = newPerson => {\n    return axios.post(baseUrl, newPerson)\n            .then(response => response.data); \n}\n\nconst deletePerson = id => {\n    return axios.delete(`${baseUrl}/${id}`)\n    .then(response => response.data); \n}\n\nconst updatePerson = (person) => {\n    return axios\n            .put(`${baseUrl}/${person.id}`, person)\n            .then(response => response.data); \n\n}\n\n\n\n\nexport default { getPersons, addPerson, deletePerson, updatePerson }; \n","import React, {useState, useEffect} from 'react'\nimport PersonService from './services/PersonService'; \n\nconst Filter = ({changeHandler}) => {\n    return (\n    <div>\n    rajaa tuloksia <input onChange={changeHandler} />\n    </div>)\n}\n\nconst Persons = ({ contactInfo, filter, createDeletorForPerson }) => {\n    const potentials = filter === '' ?\n    contactInfo \n    : contactInfo.filter(p => p.name.toLowerCase().includes(filter.toLowerCase()));\n    \n   return  potentials.map(p => (\n   <div key={p.name}>\n        {`${p.name} ${p.number}`}\n        <button onClick={createDeletorForPerson(p)}>poista</button>\n   </div>))\n}\n\nconst PersonForm = ({nameValue, nameChangeFunction, numberValue, numberChangeFunction, submitFunction}) => {\n    return(\n    <form>\n    <div>\n        nimi: <input value={nameValue} onChange={nameChangeFunction} />\n    </div>\n    <div>\n        numero: <input value={numberValue} onChange={numberChangeFunction} />\n    </div>\n    <div>\n        <button type=\"submit\" onClick={submitFunction}>lisää</button>\n    </div>\n</form>)\n\n}\n\nconst App = () => {\n    \n    const [persons, setPersons] = useState([]);\n    const [notificationInfo, setNotificationInfo] = useState({message: null, isError:false}); \n    \n\n    useEffect(() => {\n        PersonService.getPersons()\n        .then(data => setPersons(data))\n    }, []);\n\n    const [ newName, setNewName ] = useState('');\n    const [ newNumber, setNewNumber] = useState(''); \n    const [ filterString, setFilterString ] = useState(''); \n\n    const addNewInformation = (event) => {\n        event.preventDefault(); \n\n\n\n        if(persons.map(p => p.name).includes(newName)){\n            if(window.confirm(`Henkilö ${newName} on jo luettelossa, korvataanko vanha numero uudella?`)){\n                const updatedPerson = {...persons.find(p => p.name === newName), number: newNumber}; \n                PersonService.updatePerson(updatedPerson)\n                .then(data => setPersons(persons.map(p => p.id !== data.id ? p : data)))\n                .then(data => {\n                    setNotificationInfo({\n                        message: `Päivitettiin henkilön ${newName} puhelinnumero`, \n                        isError: false \n                    }); \n                })\n                .catch(data => {\n                    setNotificationInfo({\n                        message: `Henkilö ${newName} on jo poistettu`, \n                        isError: true \n                    }); \n                    setPersons(persons.filter(p => p.name !== newName)); \n\n                }); \n\n            }\n\n        } else {\n            \n        const newPerson = {\n            name: newName, \n            number: newNumber, \n            id: persons.length + 1\n        }\n        PersonService.addPerson(newPerson)\n        .then(p => setPersons(persons.concat(p)));  \n\n        setNotificationInfo({\n            message: `Lisättiin ${newName}`, \n            isError: false\n        });\n\n        setNewName(''); \n        setNewNumber(''); \n        }\n        setTimeout(() => {setNotificationInfo({message: null, isError: false})}, 4000); \n    }\n\n\n    const changeNumberValue = (event) => {\n        setNewNumber(event.target.value); \n    }\n\n    const changeNameValue = (event) => {\n        setNewName(event.target.value); \n    }\n\n    const changeFilterString = (event) => setFilterString(event.target.value); \n\n    const createDeletorForPerson = (deletablePerson) => () => {\n        if(window.confirm(`Poistetaanko ${deletablePerson.name}?`)){\n            const id = deletablePerson.id; \n            PersonService.deletePerson(id)\n            .then(response => {\n                setNotificationInfo({message: `Henkilö ${deletablePerson.name} poistettu onnistuneesti`, isError: false})\n            }).catch(response => {\n                setNotificationInfo({message: `Henkilö ${deletablePerson.name} on jo poistettu`, isError: true})\n            }); \n            setPersons(persons.filter(p => p.id !== id)); \n        }\n        setTimeout(() => {setNotificationInfo({\n            message: null, \n            isError: false\n        })}, 4000); \n    }\n\n    return (\n    <div>\n        <h2>Puhelinluettelo</h2>\n        <MessageBox notificationInfo={notificationInfo}/>\n        <Filter changeHandler={changeFilterString} />\n        <h3>Lisää uusi</h3>\n        <PersonForm\n            nameValue={newName} nameChangeFunction={changeNameValue}\n            numberValue={newNumber} numberChangeFunction={changeNumberValue}\n            submitFunction={addNewInformation}\n         />\n\n        <h2>Numerot</h2>\n        <Persons contactInfo={persons} \n        filter={filterString} createDeletorForPerson={createDeletorForPerson}/>   \n    </div>)\n}\n\nconst MessageBox = ({notificationInfo}) => {\n    const message = notificationInfo.message; \n    const isError = notificationInfo.isError; \n    if(message === null){\n        return <></>; \n    }\n    \n    const messageStyle = {\n        color: isError ? 'red' : 'green', \n        background: 'lightgrey', \n        fontSize: 20, \n        borderStyle: 'solid', \n        borderRadius: 5, \n        padding: 10, \n        marginBottom: 10 \n    }\n\n    return(\n        <div style={messageStyle}>\n            {message}\n        </div>\n    ); \n}\n\n\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}